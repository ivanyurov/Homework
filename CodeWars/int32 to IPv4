std::string intToString(int a)
{
    if (a == 0) return "0";
    if (a == 1) return "1";
    if (a == 2) return "2";
    if (a == 3) return "3";
    if (a == 4) return "4";
    if (a == 5) return "5";
    if (a == 6) return "6";
    if (a == 7) return "7";
    if (a == 8) return "8";
    if (a == 9) return "9";
}
std::string uint32_to_ip(uint32_t ip)
{
    int a1 = 0;
    int a2 = 0;
    int a3 = 0;
    int a4 = 0;
    int b = 1;
    std::string a = "";
    for (int i = 1; i <= 32; ++i)
    {
        if (ip < 2 && a.size() < 32) a.insert(0, "0");
        if (ip > 1)
        {
            if (ip % 2 == 0) a.insert(0, "0"); else a.insert(0, "1");
            ip /= 2;
            if (ip == 1) a.insert(0, "1");
        }
    }
    for (int i = 0; i < 32; ++i)
    {
        if (i < 8)
        {
            if (a[i] == '1')
            {
                for (int j = 1; j <= 7 - i; ++j) b *= 2;
                a1 += b;
                b = 1;
            }
        }
        if (7 < i && i < 16)
        {
            if (a[i] == '1')
            {
                for (int j = 1; j <= 15 - i; ++j) b *= 2;
                a2 += b;
                b = 1;
            }
        }
        if (15 < i && i < 24)
        {
            if (a[i] == '1')
            {
                for (int j = 1; j <= 23 - i; ++j) b *= 2;
                a3 += b;
                b = 1;
            }
        }
        if (23 < i && i < 32)
        {
            if (a[i] == '1')
            {
                for (int j = 1; j <= 31 - i; ++j) b *= 2;
                a4 += b;
                b = 1;
            }
        }
    }
    a = "";
    std::string c = "";
    while (a1 > 9)
    {
        b = a1 % 10;
        a1 = a1 / 10;
        c.insert(0, intToString(b));
    }
    c.insert(0, intToString(a1));
    a = a + c + ".";
    c = "";
    while (a2 > 9)
    {
        b = a2 % 10;
        a2 = a2 / 10;
        c.insert(0, intToString(b));
    }
    c.insert(0, intToString(a2));
    a = a + c + ".";
    c = "";
    while (a3 > 9)
    {
        b = a3 % 10;
        a3 = a3 / 10;
        c.insert(0, intToString(b));
    }
    c.insert(0, intToString(a3));
    a = a + c + ".";
    c = "";
    while (a4 > 9)
    {
        b = a4 % 10;
        a4 = a4 / 10;
        c.insert(0, intToString(b));
    }
    c.insert(0, intToString(a4));
    a = a + c;
    return a;
}
